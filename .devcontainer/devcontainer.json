{
	"name": "Python 3 & PostgreSQL",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {
			"moby": true,
			"azureDnsAutoDetection": true,
			"installDockerBuildx": true,
			"installDockerComposeSwitch": true,
			"version": "latest",
			"dockerDashComposeVersion": "latest"
		}
	},
	// Port forwarding moved to docker-compose.yml
	// This allows infrastructure changes without modifying devcontainer config
	// NB: DO NOT REMOVE hostRequirements PASSTHROUGH BELOW
	// THIS ALLOWS NATIVE GPU SUPPORT FOR ALL GPU'S WITHOUT ANY ADDITIONAL INSTALLS REDUCING BLOAT.
	// Additionally, we document the desired resource constraints here.
	"hostRequirements": {
		"gpu": "optional"
	},
	// Using fixed standard user for consistency
	"remoteUser": "vscode",
	"customizations": {
		"vscode": {
			"extensions": [
				// Core Python Development
				"ms-python.python", // Core Python language support
				"ms-python.vscode-pylance", // Fast Python language server
				// PEP Standards Compliance & Quality
				"ms-python.pylint", // Microsoft's Python linter with spelling support
				"ms-python.mypy-type-checker", // Type checking per PEP 484
				"matangover.mypy", // Additional mypy integration
				"njpwerner.autodocstring", // PEP 257 compliant docstrings
				// Configuration File Support
				"tamasfe.even-better-toml", // TOML support for config files (PEP 518)
				// Performance & Monitoring
				"mutantdino.resourcemonitor", // Container resource monitoring
				"ms-vscode.nvidia-extension", // GPU support
				// AI Assistance
				"visualstudioexptteam.vscodeintellicode" // AI completions with low resource usage
			],
			"settings": {
				// Use centralized config from pyproject.toml for tools that support it
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.linting.flake8Enabled": true,
				"python.linting.mypyEnabled": true,
				"python.formatting.provider": "black",
				// Reference central configuration when possible
				"black.useEditorConfig": false, // Use pyproject.toml instead
				"isort.args": [], // Use pyproject.toml config
				// Editor settings
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.organizeImports": "always"
				}
			}
		}
	},
	"postCreateCommand": "echo 'Container setup complete!'"
}