# syntax=docker/dockerfile:1.4

FROM python:3.12-slim AS dev-base

# Build arguments
ARG DEBIAN_FRONTEND=noninteractive
ARG PYTHON_VERSION=3.12
ARG PYTHONDONTWRITEBYTECODE=1
ARG PYTHONUNBUFFERED=1
ARG WORKSPACE_ROOT=/workspace/python-slim
ARG CCACHE_DIR=/.ccache

# Set environment variables for development
ENV PYTHONFAULTHANDLER=1 \
    PYTHONUNBUFFERED=${PYTHONUNBUFFERED} \
    PYTHONOPTIMIZE=2 \
    PYTHONHASHSEED=random \
    PYTHONPYCACHEPREFIX=/workspace/.pycache \
    PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE} \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    CCACHE_DIR=${CCACHE_DIR} \
    WORKSPACE_ROOT=${WORKSPACE_ROOT} \
    PATH="/usr/local/bin:$PATH" \
    NUMBA_CACHE_DIR=/tmp/numba_cache \
    MPLCONFIGDIR=/tmp/matplotlib \
    CUDA_CACHE_PATH=/tmp/cuda_cache

# Install development dependencies
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    git git-lfs build-essential cmake ninja-build \
    ccache curl ca-certificates \
    htop procps \
    libgomp1 \
    python3-dev \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy optimized packages from builder
COPY --from=python-slim-builder:latest /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages

# Install additional Python packages for development
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir PyYAML==6.0.1 jupyter notebook ipywidgets debugpy matplotlib pandas plotly

# Create workspace directory with proper permissions
RUN mkdir -p ${WORKSPACE_ROOT} ${NUMBA_CACHE_DIR} ${MPLCONFIGDIR} /tmp/cuda_cache && \
    chmod 777 ${WORKSPACE_ROOT} ${NUMBA_CACHE_DIR} ${MPLCONFIGDIR} /tmp/cuda_cache
WORKDIR ${WORKSPACE_ROOT}

# Create optimized startup script with performance tuning
RUN echo '#!/bin/bash\n\
    # Performance tuning for Python\n\
    echo never > /sys/kernel/mm/transparent_hugepage/enabled 2>/dev/null || true\n\
    echo 1 > /proc/sys/kernel/sched_child_runs_first 2>/dev/null || true\n\
    \n\
    # Setup environment for Python optimization\n\
    export PYTHONFAULTHANDLER=1\n\
    export PYTHONIOENCODING=UTF-8\n\
    \n\
    # Start debugpy in background\n\
    debugpy() {\n\
    python3 -c "import debugpy; debugpy.listen((\"0.0.0.0\", 5678)); print(\"Debugpy is listening on port 5678\")" &\n\
    }\n\
    \n\
    # Start services\n\
    debugpy\n\
    \n\
    # Execute the command\n\
    exec "$@"' > /usr/local/bin/entrypoint.sh && \
    chmod +x /usr/local/bin/entrypoint.sh

# Pre-compile frequently imported modules
RUN python -c "import numpy; import pandas; import matplotlib; import json; import yaml; import os; import sys; import re; import datetime; import math; import random; import time; import functools; import itertools; import collections; import pathlib" && \
    python -m compileall -q /usr/local/lib/python*/site-packages

# Expose ports
EXPOSE 8888 5678 6006

# Default entrypoint and command
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["sleep", "infinity"]